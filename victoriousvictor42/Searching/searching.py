# -*- coding: utf-8 -*-
"""Searching.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1edNNT3hN3e48SJNZj3vbl6awo_sxUeXv
"""



"""### Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.

### You may assume that each input would have exactly one solution, and you may not use the same element twice.

### You can return the answer in any order.

Example 1:
Input: nums = [2,7,11,15], target = 9 Output: [0,1] Output: Because nums[0] + nums[1] == 9, we return [0, 1].

Example 2:
Input: nums = [3,2,4], target = 6 Output: [1,2]

Example 3:
Input: nums = [3,3], target = 6 Output: [0,1]
"""

def two_sum(arr,targ):
    look_for = {}
    for n,x in enumerate(arr,1):
        try:
            return look_for[x], n
        except KeyError:
            look_for.setdefault(targ - x,n)

nums = [2,7,11,15]
target = 9
print(two_sum(nums,target))

nums = [3,2,4]
target = 6
print(two_sum(nums,target))

nums = [3,3]
target = 6
print(two_sum(nums,target))

"""#Assignment 2

I am struggling with these assignment but I am still trying my best to find the solution.
"""

