Instructions
Given:
A class representing Person as below:
class Parson: def __init__(self, name, age, location): self.name = name self.age = age self.location = location
A list of people as below:
people = [ Person("Dennis", 44, "Nairobi"), Person("Mary", 14, "Kisumu"), Person("John", 13, "kwale"), Person("Ruth", 24, "Mandera"), Person("Karen", 32, "Kakuma"), Person("Peter", 29, "Isiolo"), Person("Irene", 7, "nyeri"), Person("Mohamud", 21, "voi"), ]
a. Implement a function named sort_people that returns a totally ordered set of objects based on

age
location
name b. Implement sorting of the Person objects using Comparables and Comparators.
Assignment Two
Compute the time and space complexity of the 3 sort algorithms implemented today. The algorithms can be found here
Assignment Three - Bonus
Sort characters by frequency
Insertion sort-Linked List
Implement the deck of card algorithm discussed today : Line 26 - 42